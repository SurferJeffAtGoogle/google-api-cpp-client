// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// This code was generated by google-apis-code-generator 1.5.1

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   Google Analytics API (analytics/v3)
// Description:
//   Views and manages your Google Analytics data.
// Classes:
//   GaData
// Documentation:
//   https://developers.google.com/analytics/

#include "google/analytics_api/ga_data.h"
#include <string>
#include "googleapis/base/integral_types.h"
#include "googleapis/client/data/jsoncpp_data.h"
#include "googleapis/strings/stringpiece.h"


#include <string>
#include "googleapis/strings/strcat.h"

namespace google_analytics_api {
using namespace googleapis;



// Object factory method (static).
GaData::GaDataColumnHeaders* GaData::GaDataColumnHeaders::New() {
  return new client::JsonCppCapsule<GaDataColumnHeaders>;
}

// Standard immutable constructor.
GaData::GaDataColumnHeaders::GaDataColumnHeaders(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
GaData::GaDataColumnHeaders::GaDataColumnHeaders(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
GaData::GaDataColumnHeaders::~GaDataColumnHeaders() {
}

// Properties.


// Object factory method (static).
GaData::GaDataDataTable::GaDataDataTableCols* GaData::GaDataDataTable::GaDataDataTableCols::New() {
  return new client::JsonCppCapsule<GaDataDataTableCols>;
}

// Standard immutable constructor.
GaData::GaDataDataTable::GaDataDataTableCols::GaDataDataTableCols(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
GaData::GaDataDataTable::GaDataDataTableCols::GaDataDataTableCols(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
GaData::GaDataDataTable::GaDataDataTableCols::~GaDataDataTableCols() {
}

// Properties.


// Object factory method (static).
GaData::GaDataDataTable::GaDataDataTableRows::GaDataDataTableRowsC* GaData::GaDataDataTable::GaDataDataTableRows::GaDataDataTableRowsC::New() {
  return new client::JsonCppCapsule<GaDataDataTableRowsC>;
}

// Standard immutable constructor.
GaData::GaDataDataTable::GaDataDataTableRows::GaDataDataTableRowsC::GaDataDataTableRowsC(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
GaData::GaDataDataTable::GaDataDataTableRows::GaDataDataTableRowsC::GaDataDataTableRowsC(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
GaData::GaDataDataTable::GaDataDataTableRows::GaDataDataTableRowsC::~GaDataDataTableRowsC() {
}

// Properties.
// Object factory method (static).
GaData::GaDataDataTable::GaDataDataTableRows* GaData::GaDataDataTable::GaDataDataTableRows::New() {
  return new client::JsonCppCapsule<GaDataDataTableRows>;
}

// Standard immutable constructor.
GaData::GaDataDataTable::GaDataDataTableRows::GaDataDataTableRows(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
GaData::GaDataDataTable::GaDataDataTableRows::GaDataDataTableRows(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
GaData::GaDataDataTable::GaDataDataTableRows::~GaDataDataTableRows() {
}

// Properties.
// Object factory method (static).
GaData::GaDataDataTable* GaData::GaDataDataTable::New() {
  return new client::JsonCppCapsule<GaDataDataTable>;
}

// Standard immutable constructor.
GaData::GaDataDataTable::GaDataDataTable(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
GaData::GaDataDataTable::GaDataDataTable(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
GaData::GaDataDataTable::~GaDataDataTable() {
}

// Properties.

// Object factory method (static).
GaData::GaDataProfileInfo* GaData::GaDataProfileInfo::New() {
  return new client::JsonCppCapsule<GaDataProfileInfo>;
}

// Standard immutable constructor.
GaData::GaDataProfileInfo::GaDataProfileInfo(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
GaData::GaDataProfileInfo::GaDataProfileInfo(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
GaData::GaDataProfileInfo::~GaDataProfileInfo() {
}

// Properties.

// Object factory method (static).
GaData::GaDataQuery* GaData::GaDataQuery::New() {
  return new client::JsonCppCapsule<GaDataQuery>;
}

// Standard immutable constructor.
GaData::GaDataQuery::GaDataQuery(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
GaData::GaDataQuery::GaDataQuery(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
GaData::GaDataQuery::~GaDataQuery() {
}

// Properties.
// Object factory method (static).
GaData* GaData::New() {
  return new client::JsonCppCapsule<GaData>;
}

// Standard immutable constructor.
GaData::GaData(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
GaData::GaData(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
GaData::~GaData() {
}

// Properties.
}  // namespace google_analytics_api
