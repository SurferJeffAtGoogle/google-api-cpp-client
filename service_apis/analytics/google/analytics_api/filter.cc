// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// This code was generated by google-apis-code-generator 1.5.1

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   Google Analytics API (analytics/v3)
// Description:
//   Views and manages your Google Analytics data.
// Classes:
//   Filter
// Documentation:
//   https://developers.google.com/analytics/

#include "google/analytics_api/filter.h"
#include <string>
#include "googleapis/base/integral_types.h"
#include "googleapis/client/data/jsoncpp_data.h"
#include "googleapis/client/util/date_time.h"
#include "googleapis/strings/stringpiece.h"

#include "google/analytics_api/filter_expression.h"


#include <string>
#include "googleapis/strings/strcat.h"

namespace google_analytics_api {
using namespace googleapis;



// Object factory method (static).
Filter::FilterAdvancedDetails* Filter::FilterAdvancedDetails::New() {
  return new client::JsonCppCapsule<FilterAdvancedDetails>;
}

// Standard immutable constructor.
Filter::FilterAdvancedDetails::FilterAdvancedDetails(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
Filter::FilterAdvancedDetails::FilterAdvancedDetails(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
Filter::FilterAdvancedDetails::~FilterAdvancedDetails() {
}

// Properties.

// Object factory method (static).
Filter::FilterLowercaseDetails* Filter::FilterLowercaseDetails::New() {
  return new client::JsonCppCapsule<FilterLowercaseDetails>;
}

// Standard immutable constructor.
Filter::FilterLowercaseDetails::FilterLowercaseDetails(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
Filter::FilterLowercaseDetails::FilterLowercaseDetails(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
Filter::FilterLowercaseDetails::~FilterLowercaseDetails() {
}

// Properties.

// Object factory method (static).
Filter::FilterParentLink* Filter::FilterParentLink::New() {
  return new client::JsonCppCapsule<FilterParentLink>;
}

// Standard immutable constructor.
Filter::FilterParentLink::FilterParentLink(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
Filter::FilterParentLink::FilterParentLink(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
Filter::FilterParentLink::~FilterParentLink() {
}

// Properties.

// Object factory method (static).
Filter::FilterSearchAndReplaceDetails* Filter::FilterSearchAndReplaceDetails::New() {
  return new client::JsonCppCapsule<FilterSearchAndReplaceDetails>;
}

// Standard immutable constructor.
Filter::FilterSearchAndReplaceDetails::FilterSearchAndReplaceDetails(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
Filter::FilterSearchAndReplaceDetails::FilterSearchAndReplaceDetails(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
Filter::FilterSearchAndReplaceDetails::~FilterSearchAndReplaceDetails() {
}

// Properties.

// Object factory method (static).
Filter::FilterUppercaseDetails* Filter::FilterUppercaseDetails::New() {
  return new client::JsonCppCapsule<FilterUppercaseDetails>;
}

// Standard immutable constructor.
Filter::FilterUppercaseDetails::FilterUppercaseDetails(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
Filter::FilterUppercaseDetails::FilterUppercaseDetails(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
Filter::FilterUppercaseDetails::~FilterUppercaseDetails() {
}

// Properties.
// Object factory method (static).
Filter* Filter::New() {
  return new client::JsonCppCapsule<Filter>;
}

// Standard immutable constructor.
Filter::Filter(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
Filter::Filter(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
Filter::~Filter() {
}

// Properties.

const FilterExpression Filter::get_exclude_details() const {
   const Json::Value& storage = Storage("excludeDetails");
   return client::JsonValueToCppValueHelper<FilterExpression >(storage);
}

FilterExpression Filter::mutable_excludeDetails() {
  Json::Value* storage = MutableStorage("excludeDetails");
  return client::JsonValueToMutableCppValueHelper<FilterExpression >(storage);
}

const FilterExpression Filter::get_include_details() const {
   const Json::Value& storage = Storage("includeDetails");
   return client::JsonValueToCppValueHelper<FilterExpression >(storage);
}

FilterExpression Filter::mutable_includeDetails() {
  Json::Value* storage = MutableStorage("includeDetails");
  return client::JsonValueToMutableCppValueHelper<FilterExpression >(storage);
}
}  // namespace google_analytics_api
