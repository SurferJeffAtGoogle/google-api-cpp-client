// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

// This code was generated by google-apis-code-generator 1.5.1

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   Google Analytics API (analytics/v3)
// Description:
//   Views and manages your Google Analytics data.
// Classes:
//   EntityUserLink
// Documentation:
//   https://developers.google.com/analytics/

#include "google/analytics_api/entity_user_link.h"
#include <string>
#include "googleapis/client/data/jsoncpp_data.h"
#include "googleapis/strings/stringpiece.h"

#include "google/analytics_api/account_ref.h"
#include "google/analytics_api/profile_ref.h"
#include "google/analytics_api/user_ref.h"
#include "google/analytics_api/web_property_ref.h"


#include <string>
#include "googleapis/strings/strcat.h"

namespace google_analytics_api {
using namespace googleapis;



// Object factory method (static).
EntityUserLink::EntityUserLinkEntity* EntityUserLink::EntityUserLinkEntity::New() {
  return new client::JsonCppCapsule<EntityUserLinkEntity>;
}

// Standard immutable constructor.
EntityUserLink::EntityUserLinkEntity::EntityUserLinkEntity(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
EntityUserLink::EntityUserLinkEntity::EntityUserLinkEntity(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
EntityUserLink::EntityUserLinkEntity::~EntityUserLinkEntity() {
}

// Properties.

const AccountRef EntityUserLink::EntityUserLinkEntity::get_account_ref() const {
   const Json::Value& storage = Storage("accountRef");
   return client::JsonValueToCppValueHelper<AccountRef >(storage);
}

AccountRef EntityUserLink::EntityUserLinkEntity::mutable_accountRef() {
  Json::Value* storage = MutableStorage("accountRef");
  return client::JsonValueToMutableCppValueHelper<AccountRef >(storage);
}

const ProfileRef EntityUserLink::EntityUserLinkEntity::get_profile_ref() const {
   const Json::Value& storage = Storage("profileRef");
   return client::JsonValueToCppValueHelper<ProfileRef >(storage);
}

ProfileRef EntityUserLink::EntityUserLinkEntity::mutable_profileRef() {
  Json::Value* storage = MutableStorage("profileRef");
  return client::JsonValueToMutableCppValueHelper<ProfileRef >(storage);
}

const WebPropertyRef EntityUserLink::EntityUserLinkEntity::get_web_property_ref() const {
   const Json::Value& storage = Storage("webPropertyRef");
   return client::JsonValueToCppValueHelper<WebPropertyRef >(storage);
}

WebPropertyRef EntityUserLink::EntityUserLinkEntity::mutable_webPropertyRef() {
  Json::Value* storage = MutableStorage("webPropertyRef");
  return client::JsonValueToMutableCppValueHelper<WebPropertyRef >(storage);
}

// Object factory method (static).
EntityUserLink::EntityUserLinkPermissions* EntityUserLink::EntityUserLinkPermissions::New() {
  return new client::JsonCppCapsule<EntityUserLinkPermissions>;
}

// Standard immutable constructor.
EntityUserLink::EntityUserLinkPermissions::EntityUserLinkPermissions(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
EntityUserLink::EntityUserLinkPermissions::EntityUserLinkPermissions(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
EntityUserLink::EntityUserLinkPermissions::~EntityUserLinkPermissions() {
}

// Properties.
// Object factory method (static).
EntityUserLink* EntityUserLink::New() {
  return new client::JsonCppCapsule<EntityUserLink>;
}

// Standard immutable constructor.
EntityUserLink::EntityUserLink(const Json::Value& storage)
  : client::JsonCppData(storage) {
}

// Standard mutable constructor.
EntityUserLink::EntityUserLink(Json::Value* storage)
  : client::JsonCppData(storage) {
}

// Standard destructor.
EntityUserLink::~EntityUserLink() {
}

// Properties.

const UserRef EntityUserLink::get_user_ref() const {
   const Json::Value& storage = Storage("userRef");
   return client::JsonValueToCppValueHelper<UserRef >(storage);
}

UserRef EntityUserLink::mutable_userRef() {
  Json::Value* storage = MutableStorage("userRef");
  return client::JsonValueToMutableCppValueHelper<UserRef >(storage);
}
}  // namespace google_analytics_api
